name: Run tests and release

on:
  push:
    tags: "*"
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PROJECT_FOLDER: "qgispluginci"
  PYTHON_VERSION_RELEASE: "3.8"

jobs:
  tests:
    name: "Tests"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: [
            # Do not make simultaneous tests, transifex and GitHub release will fail
            # "3.6",
            "3.9",
            # "3.10",
        ]

    steps:
    - name: Get source code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: "pip"
        cache-dependency-path: "requirements/*.txt"

    - name: Install system requirements
      run: |
        sudo apt-get update
        sudo apt-get install qt5-default qttools5-dev-tools

    - name: Install Python requirements
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U -r requirements.txt
        python -m pip install -U nose2

    - name: Run tests
      env:
        transifex_token: ${{ secrets.TRANSIFEX_TOKEN }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
      run: nose2 -v

  release:
    name: "Release on tag ðŸš€"
    runs-on: ubuntu-latest
    needs: [tests]

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Get source code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION_RELEASE }}

    - name: Setup
      run: |
        VERSION=${GITHUB_REF:-0.0.0}
        VERSION=${VERSION##*/}
        sed -i "s/__VERSION__/${VERSION}/g" setup.py
        sed -i "s/__VERSION__/${VERSION}/g" qgispluginci/__about__.py

    - name: Build package
      run: |
        python setup.py sdist

    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create/update release on GitHub
      uses: ncipollo/release-action@v1.10.0
      with:
        allowUpdates: true
        artifacts: "dist/*.tar.gz"
        generateReleaseNotes: true
        omitNameDuringUpdate: true
        token: ${{ secrets.GITHUB_TOKEN }}
